# List of multi-properties (datatools::multi_properties):

#@description The list of official MC step hit processors for SuperNEMO demonstrator
#@key_label   "name"
#@meta_label  "type"


     ##################################
     #                                #
     # CALORIMETER STEP HIT PROCESSOR #
     #                                #
     ##################################

###########################################################################################
[name="calorimeter.hit_processor" type="snemo::simulation::calorimeter_step_hit_processor"]

#@config The step hit processor for the calorimeter hits

# This  processor  collects all  MC  true  hits from  the  calorimeter
# scintillator volumes  (with the "calorimeter_SD"  sensitive category
# property) and  build calorimeter-like "calo" hits  associated to the
# calorimeter scintillator block GID.   The purpose of this processing
# is to  build a single  "calo" hit from  the collection of  true hits
# produced by  a particle traversing  the block.  Both the  start time
# and the total energy deposit are recorded in the "calo" hit.

# Input from Geant4:
#
#          incoming particle
#                 \             calorimeter block
#   +--------------o---------------------------------+
#   |               \ <-- true hit #0                |
#   |            o---o <-- true hit #1               |
#   |           /  <-- true hit #2                   |
#   |          o----o <-- true hit #3                |
#   |                \ <-- true hit #4               |
#   +-----------------o------------------------------+
#                      \
#                      outgoing particle
#
# Output from the processor:
#
#                [t0]
#   +---------[r0]----+------------------------------+
#   |          :\    /:                              |
#   |          : \  / :                              |
#   |          : [DE] : <-- "calo" hit #0            |
#   |          : /  \ :      within a bounding box   |
#   |          :/    \:      delimited by [r0] & [r1]|
#   +----------+-----[r1]----------------------------+
#                [t1]
#
#   The output "calo" hit records:
#   - the start time [t0]
#   - the stop time [t1]
#   - the extreme position [r0] (diagonal of the bounding box)
#   - the extreme position [r1] (diagonal of the bounding box)
#   - the energy deposit [DE]
#   See the mctools::base_step_hit class from the Bayeux/mctools module.


##################################
# Basic configuration parameters #
##################################

#@description Logging flag
logging.priority      : string  = "error"

#@description The name of the category of output MC hits generated by this processor
hit.category          : string = "calo"

#@description The name of the sensitive MC hits that must be processed to fill the output hit category
sensitive.category    : string = "calorimeter_SD"

#@description Flag to activate a preallocated buffer/pool of MC hits to optimize memory management
use_private_pool      : boolean  = 1

#@description Initial capacity of the buffer/pool of MC hits
private_pool_capacity : integer  = 10

########################################################################################
# Parameters specific to the 'snemo::simulation::calorimeter_step_hit_processor' class #
########################################################################################

#@description The time spread of primary MC step hits to apply the clusterization
cluster.time_range    : real as time  = 1.0 ns

#@description The spacial spread of primary MC step hits to apply the clusterization
cluster.space_range   : real as length = 10.0 mm

#@description The name of the geometry category to be attached to the output MC hits
mapping.category      : string = "calorimeter_block"

#@description The names of the subaddresses not to be considered in the GID
mapping.category.any_addresses  : string[1] = "part"


     ####################################
     #                                  #
     # X-CALORIMETER STEP HIT PROCESSOR #
     #                                  #
     ####################################

############################################################################################
[name="xcalorimeter.hit_processor" type="snemo::simulation::calorimeter_step_hit_processor"]

#@config The step hit processor for the auxiliary calorimeter hits

##################################
# Basic configuration parameters #
##################################

#@description Logging flag
logging.priority      : string = "error"

#@description The name of the category of output MC hits generated by this processor
hit.category          : string = "xcalo"

#@description The name of the sensitive MC hits that must be processed to fill the output hit category
sensitive.category    : string = "xcalorimeter_SD"

#@description Flag to activate a preallocated buffer/pool of MC hits to optimize memory management
use_private_pool      : boolean = 1

#@description Initial capacity of the buffer/pool of MC hits
private_pool_capacity : integer = 10

########################################################################################
# Parameters specific to the 'snemo::simulation::calorimeter_step_hit_processor' class #
########################################################################################

#@description The time spread of primary MC step hits to apply the clusterization
cluster.time_range    : real as time  = 1.0 ns

#@description The spacial spread of primary MC step hits to apply the clusterization
cluster.space_range   : real as length = 10.0 mm

#@description The name of the geometry category to be attached to the output MC hits
mapping.category      : string = "xcalo_block"



     ####################################
     #                                  #
     # GAMMA-VETO STEP HIT PROCESSOR    #
     #                                  #
     ####################################

#####################################################################################
[name="gveto.hit_processor" type="snemo::simulation::calorimeter_step_hit_processor"]

#@config The step hit processor for the gamma veto hits

##################################
# Basic configuration parameters #
##################################

#@description Logging flag
logging.priority      : string  = "error"

#@description The name of the category of output MC hits generated by this processor
hit.category          : string = "gveto"

#@description The name of the sensitive MC hits that must be processed to fill the output hit category
sensitive.category    : string = "gveto_SD"

#@description Flag to activate a preallocated buffer/pool of MC hits to optimize memory management
use_private_pool      : boolean = 1

#@description Initial capacity of the buffer/pool of MC hits
private_pool_capacity : integer = 10

########################################################################################
# Parameters specific to the 'snemo::simulation::calorimeter_step_hit_processor' class #
########################################################################################

#@description The time spread of primary MC step hits to apply the clusterization
cluster.time_range    : real as time  = 1.0 ns

#@description The spacial spread of primary MC step hits to apply the clusterization
cluster.space_range   : real as length = 10.0 mm

#@description The name of the geometry category to be attached to the output MC hits
mapping.category      : string = "gveto_block"


     #############################
     #                           #
     # GEIGER STEP HIT PROCESSOR #
     #                           #
     #############################

#########################################################################
[name="gg.hit_processor" type="snemo::simulation::gg_step_hit_processor"]

#@config The step hit processor for the Geiger simulated hits

# This processor collects all MC true hits from the drift cell volumes
# (with  the  "tracker_SD"  sensitive category  property)  and  builds
# Geiger-like hits associated to a  given drift cell ID.  It generates
# randomly distributed  primary ionizations along  the true step  of a
# given particle  (electron/positron, muon, alpha...) and  records the
# time and position  of the ionization process that is  closest to the
# anode wire.  Optionally  it is possible to record the  true time and
# position of the minimal approach distance to the anode wire.

#
# incoming charged particle
#       \                     drift cell volume
#   +----o------------------------------------+
#   |     \                                   |    Caption:
#   |      *  <-- true hit #0                 |
#   |       *                                 |    o---o   true "tracker" hit.
#   |        \                                |
#   |         o                               |    *       primary ionization along the step in the tracking gas.
#   |         *                               |
#   |         *  <-- true hit #1              |    (*)     primary ionization closest to the anode
#   |         |                               |            wire.
#   |         |   [dc]     [r1]               |
#   |   [rc] (c)--------.@                    |    . . .   Geiger avalanche minimum path.
#   |         o      .                        |
#   |          \  .                           |    @       The central anode wire.
#   |  [t0,r0] (*)                            |
#   |    [p0]    \   <-- true hit #2          |    (c)---  Minimum Approach Position (MAP)
#   |             *                           |
#   |              o                          |
#   |               *                         |
#   |                \   <-- true hit #3      |
#   |                 *                       |
#   +------------------o----------------------+
#                       \
#              outgoing charged particle
#
#   The output "gg" hit records:
#   - the time of the primary ionization [t0]
#   - the position of the primary ionization [r0]
#   - the momentum of the particle at primary ionization [p0]
#   - the position of the impact of the Geiger avalanche on the anode wire [r1]
#   Optional parameters are:
#   - the minimum approach position [rc] and distance [dc]
#   See the 'mctools::base_step_hit' class from the Bayeux/mctools module.

##################################
# Basic configuration parameters #
##################################

#@description Logging flag
logging.priority   : string  = "error"

#@description The name of the category of output MC hits generated by this processor
hit.category       : string  = "gg"

#@description The name of the sensitive MC hits that must be processed to fill the output hit category
sensitive.category : string  = "tracker_SD"


###############################################################################
# Parameters specific to the 'snemo::simulation::gg_step_hit_processor' class #
###############################################################################

#@description The name of the geometry category to be attached to the output MC hits
mapping.category     : string  = "drift_cell_core"

#@description The name of the geometry category associated to the SuperNEMO module
module.category      : string  = "module"

# #@description The type of the PRNG used internally by the processor
# rng.id              : string  = "mt19937"

# #@description The seed of the PRNG used internally by the processor
# rng.seed            : integer = 314159

# #@description A flag that tells to simulate a continuous ionization process along the track (default = false)
# use_continuous_ionization : boolean = false

# #@description Fiducial radius of the drift cell taken into account to produce some hits
# fiducial_drift_radius : real  =   22.0  # mm

# #@description Fiducial length of the drift cell taken into account to produce some hits
# fiducial_drift_length : real  = 2866.0  # mm

#@description Mean ionization energy used to randomize electron-ion pairs along the particle path
mean_ionization_energy : real as energy = 50.0 eV

#@description The time resolution
time_resolution        : real as time = 10.0 ns

#@description Store true track ID and parent track ID
store_track_infos      : boolean = 1

#@description For each cell traversed by a track, compute the position of minimum approach to the anode wire (debug purpose only so default is 0)
compute_minimum_approach_position : boolean = 1


# end
